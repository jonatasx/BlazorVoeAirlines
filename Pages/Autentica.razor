@page "/autentica"
@inject HttpClient client;
@using Newtonsoft.Json;
@using Data;


<div hidden="@login">
    <div class="col-3">
        Usuário:<input type="text" class="form-control" id="inputUser" @bind-value="@inputUser" placeholder="">
    </div>
    <div class="col-3">
        Senha:<input type="password" class="form-control" id="inputPassword" @bind-value="@inputPassword" placeholder="">
    </div>
    <div class="col-3" style="margin-top:10px;">
        <button type="submit" @onclick="Acessar" class="btn btn-primary mb-6">Confirmar acesso</button>
    </div>
</div>

@if(acesso == 1 || loginStatus == 1){    
    <div hidden="@logedin">
        <p style="margin-top:25px;">Seja bem vindo:@inputUser</p>
        <p>Você tem a funcionalidade habilitada de:  <NavLink class="nav-link" href="fetchdata">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Lista de Usuarios
                </NavLink> </p>
        <div class="col-3" style="margin-top:10px;">
            <button type="button" @onclick="Sair" class="btn btn-danger mb-6">Sair</button>
        </div>
    </div>
}

@code{
    int? loginStatus;
    string inputUser { get; set; } = string.Empty;
    string inputPassword { get; set; } = string.Empty;
    int? acesso;
    bool login = false;
    bool logedin = true;
    List<Login>? Users;
    protected override async Task OnInitializedAsync()
    {
        var result = await ProtectedSessionStore.GetAsync<int>("loginStatus");
        loginStatus = result.Success ? result.Value : acesso;
        if(loginStatus == 1)
        {
            HideLogin();
        }else{
            ShowLogin();
        }
    }

    private async Task Sair()
    {
        acesso = 0;
        await ProtectedSessionStore.SetAsync("loginStatus", acesso);
        var result = await ProtectedSessionStore.GetAsync<int>("loginStatus");
        loginStatus = result.Success ? result.Value : acesso;
        ShowLogin();
    }
    
    private async Task Acessar()
    {
        var apiName = "http://jonatasx-001-site1.ftempurl.com/api/login/";
        var httpResponse = await client.GetAsync(apiName);
        if (httpResponse.IsSuccessStatusCode)
        {
            Users = new List<Login>();
            var apiConteudo = await httpResponse.Content.ReadAsStringAsync();
            Users = JsonConvert.DeserializeObject<List<Login>>(apiConteudo);
            StateHasChanged();
        }
        foreach(var user in Users)
        {
            if(user.Usuario == inputUser)
            {
                acesso = 1;
                var result = await ProtectedSessionStore.GetAsync<int>("loginStatus");
                loginStatus = result.Success ? result.Value : acesso;
                await ProtectedSessionStore.SetAsync("loginStatus", acesso);
                HideLogin();
            }            
        }
    }

    void HideLogin(){
        login = true;
        logedin = false;
    }
    void ShowLogin(){
        login = false;
        logedin = true;
    }
}